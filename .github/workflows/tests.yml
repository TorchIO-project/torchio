name: Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 4 * * *"

jobs:
  pytest:
    name: Unit tests
    strategy:
      matrix:
        os: [
          ubuntu-latest,
          macos-latest,
          windows-latest,
        ]
        python-version: [
          '3.8',
          '3.9',
          '3.10',
          '3.11',
          '3.12',
        ]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Set up Python
        run: |
          uv python install ${{ matrix.python-version }}
          uv venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Create and activate virtual environment and
        run: |
          uv venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Install tox
        run: uv pip install tox-uv

      - name: Install torchio
        run: uv pip install .[all]

      # Run all tests on schedule, but only non-slow tests on push
      - name: Run pytest
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            tox -e pytest
          else
            tox -e pytest -- -m "not slow"
          fi
        shell: bash  # so it doesn't fail on Windows

      - name: Upload coverage reports to Codecov
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12' }}
        run: |
          OS_LOWERCASE=$(echo $RUNNER_OS | tr '[:upper:]' '[:lower:]')
          curl -Os https://uploader.codecov.io/latest/${OS_LOWERCASE}/codecov
          chmod +x codecov
          ./codecov

  cli:
    name: CLI smoke tests
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.12'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Set up Python
        run: |
          uv python install ${{ env.PYTHON_VERSION }}
          uv venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Install project
        run: uv pip install .

      - name: Test transforms CLI tool
        run: tiotr --help

      - name: Test info CLI tool
        run: tiohd --help
